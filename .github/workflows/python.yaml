# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and build

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ master ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        poetry run flake8
    - name: Check types with mypy
      run: |
        poetry run mypy
    - name: Run unit tests
      run: |
        poetry run pytest tests --cov --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  integ-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        es-version: [5.6.16, 6.8.7]
        python-version: [3.7, 3.8, 3.9]
    services:
      elasticsearch:
        image: elasticsearch:${{ matrix.es-version }}
        ports:
        - 9200:9200
        options: >-
          -e="discovery.type=single-node"
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry install
    - name: Run integration tests
      run: |
        poetry run pytest tests_integ --cov --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
    - unit-tests
    - integ-tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install bumpversion poetry
    - name: Set package version
      run: |
        bumpversion --new-version $(git describe --tag --match 'v*' | cut -c 2-) .
    - name: Build package
      run: |
        poetry build
    - name: Upload package to pypi.org
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish
